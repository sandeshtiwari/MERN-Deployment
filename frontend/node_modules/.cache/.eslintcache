[{"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\index.js":"1","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\App.js":"2","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\Store.js":"4","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\utils.js":"5","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\CartScreen.js":"7","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ShippingAddressScreen.js":"9","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\OrderScreen.js":"10","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\SigninScreen.js":"11","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\PaymentMethodScreen.js":"12","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\OrderHistoryScreen.js":"13","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ProfileScreen.js":"14","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\PlaceOrderScreen.js":"15","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\SignupScreen.js":"16","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\SearchScreen.js":"17","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\DashboardScreen.js":"18","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ProductEditScreen.js":"19","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ProductListScreen.js":"20","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\ProtectedRoute.js":"21","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\SearchBox.js":"22","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\ProtectedRoute copy.js":"23","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\LoadingBox.js":"24","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\Product.js":"25","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\MessageBox.js":"26","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\Rating.js":"27","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\CheckoutSteps.js":"28"},{"size":917,"mtime":1652793440000,"results":"29","hashOfConfig":"30"},{"size":8956,"mtime":1653255546000,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1652215252000,"results":"32","hashOfConfig":"30"},{"size":2456,"mtime":1652715466000,"results":"33","hashOfConfig":"30"},{"size":154,"mtime":1652383754000,"results":"34","hashOfConfig":"30"},{"size":2080,"mtime":1652286972000,"results":"35","hashOfConfig":"30"},{"size":4510,"mtime":1652303870000,"results":"36","hashOfConfig":"30"},{"size":4629,"mtime":1652383858000,"results":"37","hashOfConfig":"30"},{"size":3381,"mtime":1652449590000,"results":"38","hashOfConfig":"30"},{"size":8518,"mtime":1652794836000,"results":"39","hashOfConfig":"30"},{"size":2537,"mtime":1652996140000,"results":"40","hashOfConfig":"30"},{"size":2185,"mtime":1652708084000,"results":"41","hashOfConfig":"30"},{"size":3063,"mtime":1653314048000,"results":"42","hashOfConfig":"30"},{"size":3261,"mtime":1652995486000,"results":"43","hashOfConfig":"30"},{"size":6656,"mtime":1652716950000,"results":"44","hashOfConfig":"30"},{"size":3328,"mtime":1652450756000,"results":"45","hashOfConfig":"30"},{"size":8872,"mtime":1653063848000,"results":"46","hashOfConfig":"30"},{"size":4346,"mtime":1653153138000,"results":"47","hashOfConfig":"30"},{"size":7695,"mtime":1653321592000,"results":"48","hashOfConfig":"30"},{"size":6206,"mtime":1653323604000,"results":"49","hashOfConfig":"30"},{"size":339,"mtime":1653069732000,"results":"50","hashOfConfig":"30"},{"size":1121,"mtime":1653016766000,"results":"51","hashOfConfig":"30"},{"size":351,"mtime":1653070274000,"results":"52","hashOfConfig":"30"},{"size":281,"mtime":1652286618000,"results":"53","hashOfConfig":"30"},{"size":1654,"mtime":1652304314000,"results":"54","hashOfConfig":"30"},{"size":218,"mtime":1652286748000,"results":"55","hashOfConfig":"30"},{"size":1563,"mtime":1653060058000,"results":"56","hashOfConfig":"30"},{"size":520,"mtime":1652389874000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1828cyz",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\index.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\App.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\Store.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\utils.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\HomeScreen.js",["146"],[],"import React, { useState, useEffect, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport logger from \"use-reducer-logger\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Product from \"../components/Product\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n// import data from \"../data\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"FETCH_SUCCESS\":\r\n      return { ...state, products: action.payload, loading: false };\r\n    case \"FETCH_FAIL\":\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst HomeScreen = () => {\r\n  const [{ loading, error, products }, dispatch] = useReducer(logger(reducer), {\r\n    products: [],\r\n    loading: true,\r\n    error: \"\",\r\n  });\r\n  // const [products, setProducts] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      dispatch({ type: \"FETCH_REQUEST\" });\r\n      try {\r\n        const result = await axios.get(\"/api/products\");\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n      } catch (err) {\r\n        dispatch({ type: \"FETCH_FAIL\", payload: err.message });\r\n      }\r\n\r\n      // setProducts(result.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Amazona</title>\r\n      </Helmet>\r\n      <h1>Featured Products</h1>\r\n      <div className='products'>\r\n        {loading ? (\r\n          <LoadingBox />\r\n        ) : error ? (\r\n          <MessageBox variant='danger'>{error}</MessageBox>\r\n        ) : (\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product.slug} sm={6} md={4} lg={3} className='mb-3'>\r\n                <Product product={product}></Product>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\CartScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ProductScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ShippingAddressScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\OrderScreen.js",["147"],[],"import axios from \"axios\";\r\nimport React, { useContext, useEffect, useReducer } from \"react\";\r\nimport { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { Store } from \"../Store\";\r\nimport { getError } from \"../utils\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_REQUEST\":\r\n      return { ...state, loading: true, error: \"\" };\r\n    case \"FETCH_SUCCESS\":\r\n      return { ...state, loading: false, order: action.payload, error: \"\" };\r\n    case \"FETCH_FAIL\":\r\n      return { ...state, loading: false, error: action.payload };\r\n    case \"PAY_REQUEST\":\r\n      return { ...state, loadingPay: true };\r\n    case \"PAY_SUCCESS\":\r\n      return { ...state, loadingPay: false, successPay: true };\r\n    case \"PAY_FAIL\":\r\n      return { ...state, loadingPay: false };\r\n    case \"PAY_RESET\":\r\n      return { ...state, loadingPay: false, successPay: false };\r\n  }\r\n};\r\n\r\nconst OrderScreen = () => {\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  const params = useParams();\r\n  const { id: orderId } = params;\r\n  const navigate = useNavigate();\r\n\r\n  const [{ loading, error, order, successPay, loadingPay }, dispatch] =\r\n    useReducer(reducer, {\r\n      loading: true,\r\n      order: {},\r\n      error: \"\",\r\n      successPay: false,\r\n      loadingPay: false,\r\n    });\r\n\r\n  const [{ isPending }, paypalDispatch] = usePayPalScriptReducer();\r\n\r\n  const createOrder = (data, actions) => {\r\n    return actions.order\r\n      .create({\r\n        purchase_units: [\r\n          {\r\n            amount: { value: order.totalPrice },\r\n          },\r\n        ],\r\n      })\r\n      .then((orderID) => {\r\n        return orderID;\r\n      });\r\n  };\r\n\r\n  const onApprove = (data, actions) => {\r\n    return actions.order.capture().then(async function (details) {\r\n      try {\r\n        dispatch({ type: \"PAY_REQUEST\" });\r\n        const { data } = await axios.put(\r\n          `/api/orders/${order._id}/pay`,\r\n          details,\r\n          {\r\n            headers: { authorization: `Bearer ${userInfo.token}` },\r\n          }\r\n        );\r\n        dispatch({ type: \"PAY_SUCCESS\", payload: data });\r\n        toast.success(\"Order is Paid\");\r\n      } catch (err) {\r\n        dispatch({ type: \"PAY_FAIL\", payload: getError(err) });\r\n        toast.error(getError(err));\r\n      }\r\n    });\r\n  };\r\n\r\n  const onError = (err) => {\r\n    toast.err(getError(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchOrder = async () => {\r\n      try {\r\n        dispatch({ type: \"FETCH_REQUEST\" });\r\n        const { data } = await axios.get(`/api/orders/${orderId}`, {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: data });\r\n      } catch (err) {\r\n        dispatch({ type: \"FETCH_FAIL\", payload: getError(err) });\r\n      }\r\n    };\r\n\r\n    if (!userInfo) {\r\n      return navigate(\"/login\");\r\n    }\r\n    if (!order._id || successPay || (order._id && order._id !== orderId)) {\r\n      fetchOrder();\r\n      if (successPay) {\r\n        dispatch({ type: \"PAY_RESET\" });\r\n      }\r\n    } else {\r\n      const loadPaypalScript = async () => {\r\n        const { data: clientId } = await axios.get(\"/api/keys/paypal\", {\r\n          headers: { authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        paypalDispatch({\r\n          type: \"resetOptions\",\r\n          value: {\r\n            \"client-id\": clientId,\r\n            currency: \"USD\",\r\n          },\r\n        });\r\n        paypalDispatch({ type: \"setLoadingStatus\", value: \"pending\" });\r\n      };\r\n      loadPaypalScript();\r\n    }\r\n  }, [order, userInfo, orderId, navigate, paypalDispatch, successPay]);\r\n\r\n  return loading ? (\r\n    <LoadingBox></LoadingBox>\r\n  ) : error ? (\r\n    <MessageBox variant='danger'>{error}</MessageBox>\r\n  ) : (\r\n    <div>\r\n      <Helmet>\r\n        <title>Order {orderId}</title>\r\n      </Helmet>\r\n      <h1 className='my-3'>Order {orderId}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <Card className='mb-3'>\r\n            <Card.Body>\r\n              <Card.Title>Shipping</Card.Title>\r\n              <Card.Text>\r\n                <strong>Name:</strong> {order.shippingAddress.fullName} <br />\r\n                <strong>Address: </strong> {order.shippingAddress.address},\r\n                {order.shippingAddress.city}, {order.shippingAddress.postalCode}\r\n                ,{order.shippingAddress.country}\r\n              </Card.Text>\r\n              {order.isDelivered ? (\r\n                <MessageBox variant='success'>\r\n                  Delivered at {order.deliveredAt}\r\n                </MessageBox>\r\n              ) : (\r\n                <MessageBox variant='danger'>Not Delivered</MessageBox>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n          <Card className='mb-3'>\r\n            <Card.Body>\r\n              <Card.Title>Payment</Card.Title>\r\n              <Card.Text>\r\n                <strong>Method:</strong> {order.paymentMethod} <br />\r\n              </Card.Text>\r\n              {order.isPaid ? (\r\n                <MessageBox variant='success'>\r\n                  Paid at {order.paidAt}\r\n                </MessageBox>\r\n              ) : (\r\n                <MessageBox variant='danger'>Not Paid</MessageBox>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n          <Card className='mb-3'>\r\n            <Card.Body>\r\n              <Card.Title>Items</Card.Title>\r\n              <ListGroup variant='flush'>\r\n                {order.orderItems.map((item) => (\r\n                  <ListGroup.Item key={item._id}>\r\n                    <Row className='align-items-center'>\r\n                      <Col md={6}>\r\n                        <img\r\n                          src={item.image}\r\n                          alt={item.name}\r\n                          className='img-fluid rounded img-thumbnail'\r\n                        ></img>{\" \"}\r\n                        <Link to={`/product/${item.slug}`}>{item.name}</Link>\r\n                      </Col>\r\n                      <Col md={3}>\r\n                        <span>{item.quantity}</span>\r\n                      </Col>\r\n                      <Col md={3}>${item.price}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card className='mb-3'>\r\n            <Card.Body>\r\n              <Card.Title>Order Summary</Card.Title>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Items</Col>\r\n                    <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Shipping</Col>\r\n                    <Col>${order.shippingPrice.toFixed(2)}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Order Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {isPending ? (\r\n                    <LoadingBox />\r\n                  ) : (\r\n                    <div>\r\n                      <PayPalButtons\r\n                        createOrder={createOrder}\r\n                        onApprove={onApprove}\r\n                        onError={onError}\r\n                      ></PayPalButtons>\r\n                    </div>\r\n                  )}\r\n                  {loadingPay && <LoadingBox></LoadingBox>}\r\n                </ListGroup.Item>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\SigninScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\PaymentMethodScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\OrderHistoryScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ProfileScreen.js",["148","149"],[],"import React, { useContext, useReducer, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Store } from \"../Store\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getError } from \"../utils\";\r\nimport axios from \"axios\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_REQUEST\":\r\n      return { ...state, loadingUpdate: true };\r\n    case \"UPDATE_SUCCESS\":\r\n      return { ...state, loadingUpdate: false };\r\n    case \"UPDATE_FAIL\":\r\n      return { ...state, loadingUpdate: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function ProfileScreen() {\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const [name, setName] = useState(userInfo.name);\r\n  const [email, setEmail] = useState(userInfo.email);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\r\n    loadingUpdate: false,\r\n  });\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.put(\r\n        \"/api/users/profile\",\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: \"UPDATE_SUCCESS\",\r\n      });\r\n      ctxDispatch({ type: \"USER_SIGNIN\", payload: data });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      toast.success(\"User updated successfully\");\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"FETCH_FAIL\",\r\n      });\r\n      toast.error(getError(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container small-container'>\r\n      <Helmet>\r\n        <title>User Profile</title>\r\n      </Helmet>\r\n      <h1 className='my-3'>User Profile</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <Form.Group className='mb-3' controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3' controlId='name'>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3' controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className='mb-3' controlId='password'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <div className='mb-3'>\r\n          <Button type='submit'>Update</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\PlaceOrderScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\SignupScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\SearchScreen.js",["150"],[],"import React, { useEffect, useReducer, useState } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getError } from \"../utils\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Rating from \"../components/Rating\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Product from \"../components/Product\";\r\nimport LinkContainer from \"react-router-bootstrap/LinkContainer\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"FETCH_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        products: action.payload.products,\r\n        page: action.payload.page,\r\n        pages: action.payload.pages,\r\n        countProducts: action.payload.countProducts,\r\n        loading: false,\r\n      };\r\n    case \"FETCH_FAIL\":\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst prices = [\r\n  {\r\n    name: \"$1 to $50\",\r\n    value: \"1-50\",\r\n  },\r\n  {\r\n    name: \"$51 to $200\",\r\n    value: \"51-200\",\r\n  },\r\n  {\r\n    name: \"$201 to $1000\",\r\n    value: \"201-1000\",\r\n  },\r\n];\r\n\r\nexport const ratings = [\r\n  {\r\n    name: \"4stars & up\",\r\n    rating: 4,\r\n  },\r\n\r\n  {\r\n    name: \"3stars & up\",\r\n    rating: 3,\r\n  },\r\n\r\n  {\r\n    name: \"2stars & up\",\r\n    rating: 2,\r\n  },\r\n\r\n  {\r\n    name: \"1stars & up\",\r\n    rating: 1,\r\n  },\r\n];\r\n\r\nexport default function SearchScreen() {\r\n  const navigate = useNavigate();\r\n  const { search } = useLocation();\r\n  const sp = new URLSearchParams(search); // /search?category=Shirts\r\n  const category = sp.get(\"category\") || \"all\";\r\n  const query = sp.get(\"query\") || \"all\";\r\n  const price = sp.get(\"price\") || \"all\";\r\n  const rating = sp.get(\"rating\") || \"all\";\r\n  const order = sp.get(\"order\") || \"newest\";\r\n  const page = sp.get(\"page\") || 1;\r\n\r\n  const [{ loading, error, products, pages, countProducts }, dispatch] =\r\n    useReducer(reducer, {\r\n      loading: true,\r\n      error: \"\",\r\n    });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(\r\n          `/api/products/search?page=${page}&query=${query}&category=${category}&price=${price}&rating=${rating}&order=${order}`\r\n        );\r\n        dispatch({ type: \"FETCH_SUCCESS\", payload: data });\r\n      } catch (err) {\r\n        dispatch({\r\n          type: \"FETCH_FAIL\",\r\n          payload: getError(error),\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [category, error, order, page, price, query, rating]);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const { data } = await axios.get(`/api/products/categories`);\r\n        setCategories(data);\r\n      } catch (err) {\r\n        toast.error(getError(error));\r\n      }\r\n    };\r\n    fetchCategories();\r\n  }, [dispatch]);\r\n\r\n  const getFilterUrl = (filter) => {\r\n    const filterPage = filter.page || page;\r\n    const filterCategory = filter.category || category;\r\n    const filterQuery = filter.query || query;\r\n    const filterRating = filter.rating || rating;\r\n    const filterPrice = filter.price || price;\r\n    const sortOrder = filter.order || order;\r\n    return `/search?category=${filterCategory}&query=${filterQuery}&price=${filterPrice}&rating=${filterRating}&order=${sortOrder}&page=${filterPage}`;\r\n  };\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Search Products</title>\r\n      </Helmet>\r\n      <Row>\r\n        <Col md={3}>\r\n          <h3>Department</h3>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={\"all\" === category ? \"text-bold\" : \"\"}\r\n                  to={getFilterUrl({ category: \"all\" })}\r\n                >\r\n                  Any\r\n                </Link>\r\n              </li>\r\n              {categories.map((c) => (\r\n                <li key={c}>\r\n                  <Link\r\n                    className={c === category ? \"text-bold\" : \"\"}\r\n                    to={getFilterUrl({ category: c })}\r\n                  >\r\n                    {c}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h3>Price</h3>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  className={\"all\" === price ? \"text-bold\" : \"\"}\r\n                  to={getFilterUrl({ price: \"all\" })}\r\n                >\r\n                  Any\r\n                </Link>\r\n              </li>\r\n              {prices.map((p) => (\r\n                <li key={p.value}>\r\n                  <Link\r\n                    to={getFilterUrl({ price: p.value })}\r\n                    className={p.value === price ? \"text-bold\" : \"\"}\r\n                  >\r\n                    {p.name}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h3>Avg. Customer Review</h3>\r\n            <ul>\r\n              {ratings.map((r) => (\r\n                <li key={r.name}>\r\n                  <Link\r\n                    to={getFilterUrl({ rating: r.rating })}\r\n                    className={`${r.rating}` === `${rating}` ? \"text-bold\" : \"\"}\r\n                  >\r\n                    <Rating caption={\" & up\"} rating={r.rating}></Rating>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n              <li>\r\n                <Link\r\n                  to={getFilterUrl({ rating: \"all\" })}\r\n                  className={rating === \"all\" ? \"text-bold\" : \"\"}\r\n                >\r\n                  <Rating caption={\" & up\"} rating={0}></Rating>\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </Col>\r\n        <Col md={9}>\r\n          {loading ? (\r\n            <LoadingBox></LoadingBox>\r\n          ) : error ? (\r\n            <MessageBox variant='danger'>{error}</MessageBox>\r\n          ) : (\r\n            <>\r\n              <Row className='justify-content-between mb-3'>\r\n                <Col md={6}>\r\n                  <div>\r\n                    {countProducts === 0 ? \"No\" : countProducts} Results\r\n                    {query !== \"all\" && \" : \" + query}\r\n                    {category !== \"all\" && \" : \" + category}\r\n                    {price !== \"all\" && \" : Price \" + price}\r\n                    {rating !== \"all\" && \" : Rating \" + rating + \" & up\"}\r\n                    {query !== \"all\" ||\r\n                    category !== \"all\" ||\r\n                    rating !== \"all\" ||\r\n                    price !== \"all\" ? (\r\n                      <Button\r\n                        variant='light'\r\n                        onClick={() => navigate(\"/search\")}\r\n                      >\r\n                        <i className='fas fa-times-circle'></i>\r\n                      </Button>\r\n                    ) : null}\r\n                  </div>\r\n                </Col>\r\n                <Col className='text-end'>\r\n                  Sort by{\" \"}\r\n                  <select\r\n                    value={order}\r\n                    onChange={(e) => {\r\n                      navigate(getFilterUrl({ order: e.target.value }));\r\n                    }}\r\n                  >\r\n                    <option value='newest'>Newest Arrivals</option>\r\n                    <option value='lowest'>Price: Low to High</option>\r\n                    <option value='highest'>Price: High to Low</option>\r\n                    <option value='toprated'>Avg. Customer Reviews</option>\r\n                  </select>\r\n                </Col>\r\n              </Row>\r\n              {products.length === 0 && (\r\n                <MessageBox>No Product Found</MessageBox>\r\n              )}\r\n\r\n              <Row>\r\n                {products.map((product) => (\r\n                  <Col sm={6} lg={4} className='mb-3' key={product._id}>\r\n                    <Product product={product}></Product>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n\r\n              <div>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                  <LinkContainer\r\n                    key={x + 1}\r\n                    className='mx-1'\r\n                    to={getFilterUrl({ page: x + 1 })}\r\n                  >\r\n                    <Button\r\n                      className={Number(page) === x + 1 ? \"text-bold\" : \"\"}\r\n                      variant='light'\r\n                    >\r\n                      {x + 1}\r\n                    </Button>\r\n                  </LinkContainer>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\DashboardScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ProductEditScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\screens\\ProductListScreen.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\ProtectedRoute.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\SearchBox.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\ProtectedRoute copy.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\LoadingBox.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\Product.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\MessageBox.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\Rating.js",[],[],"C:\\Users\\tiwari\\Desktop\\Hard_drive\\Desktop\\MERN FULL STACKS\\Amazona\\frontend\\src\\components\\CheckoutSteps.js",[],[],{"ruleId":"151","severity":1,"message":"152","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":17,"column":3,"nodeType":"157","messageId":"158","endLine":32,"endColumn":4},{"ruleId":"151","severity":1,"message":"159","line":30,"column":10,"nodeType":"153","messageId":"154","endLine":30,"endColumn":25},{"ruleId":"151","severity":1,"message":"160","line":32,"column":12,"nodeType":"153","messageId":"154","endLine":32,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":119,"column":6,"nodeType":"163","endLine":119,"endColumn":16,"suggestions":"164"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.","ArrayExpression",["165"],{"desc":"166","fix":"167"},"Update the dependencies array to be: [dispatch, error]",{"range":"168","text":"169"},[3147,3157],"[dispatch, error]"]